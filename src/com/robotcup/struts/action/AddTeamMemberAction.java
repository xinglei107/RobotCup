/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.hibernate.Session;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.TeamMembers;
import com.robotcup.service.imp.TeamManageServiceImp;
import com.robotcup.struts.form.TeamMemberForm;

/** 
 * MyEclipse Struts
 * Creation date: 04-17-2014
 * 
 * XDoclet definition:
 * @struts.action path="/addTeamMember" name="teamMemberForm" scope="request" validate="true"
 */
@Controller
public class AddTeamMemberAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Resource
	private TeamManageServiceImp teamManageServiceImp;
	public TeamManageServiceImp getTeamManageServiceImp() {
		return teamManageServiceImp;
	}
	public void setTeamManageServiceImp(TeamManageServiceImp teamManageServiceImp) {
		this.teamManageServiceImp = teamManageServiceImp;
	}
	/**
	 * 更新成员和添加成员都在此方法中
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TeamMemberForm teamMemberForm = (TeamMemberForm) form;
		String mid_=request.getParameter("mid");
		int mid=-1;//
		if(mid_!=null&&mid_!="")//如果mid不为空则说明是修改成员，否则为添加成员
		{
			mid=Integer.parseInt(mid_);
		}
		TeamMembers tm=new TeamMembers();
		tm.setMemail(teamMemberForm.getMemail());
		tm.setMgender(teamMemberForm.getMgender());
		tm.setMname(teamMemberForm.getMname());
		tm.setMphone(teamMemberForm.getMphone());
		tm.setMremark("");
		tm.setMtype(teamMemberForm.getMtype());
		tm.setTeamUser(teamManageServiceImp.getTeamUserByTid(teamMemberForm.getTid()));
		tm.setMleader(teamMemberForm.getMleader()==null?0:1);
		int mid1=teamManageServiceImp.existLeader(teamMemberForm.getTid());
		if(mid1!=-1&&mid1!=mid&&teamMemberForm.getMleader()!=null)//mid=-1表示没有领队，!=-1表示有领队了，而且不是当前的修改对象
		{
			request.setAttribute("res", 0);//返回插入失败
			request.setAttribute("type", teamMemberForm.getMtype().equals("教师")?1:0);
			return mapping.findForward("fail");
		}
		else
		{
			if(mid!=-1)//如果mid!=-1则说明是修改成员，否则为添加成员
			{
				tm.setMid(mid);
				teamManageServiceImp.changeTeamMember(tm);
			}
			else
			{
				teamManageServiceImp.addTeamMember(tm);
			}
		}
		//添加或修改成功以后重新查询显示
		List<TeamMembers> teamMember=teamManageServiceImp.getTeamMembersByTid(teamMemberForm.getTid());
		request.getSession().setAttribute("teamMember", teamMember);
		
		return mapping.findForward("showmember");
	}
}