/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.TeamAdmin;
import com.robotcup.parameter.Parameters;
import com.robotcup.pojo.TeamApp;
import com.robotcup.service.imp.ExecuteQueryImp;
import com.robotcup.service.imp.TeamManageServiceImp;

/**
 * MyEclipse Struts Creation date: 04-29-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="method"<br>
 * 
 *                2016-03-26<br>
 *                1、记录用户当前操作的是第几页 <br>
 *                2、支持批量通过、拒绝、删除
 */
@Controller
public class ManageApplicationAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Resource
	private TeamManageServiceImp teamManageServiceImp;

	public TeamManageServiceImp getTeamManageServiceImp() {
		return teamManageServiceImp;
	}

	public void setTeamManageServiceImp(
			TeamManageServiceImp teamManageServiceImp) {
		this.teamManageServiceImp = teamManageServiceImp;
	}

	@Resource
	private ExecuteQueryImp executeQueryImp;

	public ExecuteQueryImp getExecuteQueryImp() {
		return executeQueryImp;
	}

	public void setExecuteQueryImp(ExecuteQueryImp executeQueryImp) {
		this.executeQueryImp = executeQueryImp;
	}

	public ActionForward permit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int appid = Integer.parseInt(request.getParameter("appid"));
		teamManageServiceImp.changeAppState(appid, 1);
		redirect(request);

		return mapping.findForward("ok");
	}

	/**
	 * 2016-03-26 批量通过
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward persel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String[] idArray = request.getParameterValues("check[]");
		if (idArray != null) {
			for (String s : idArray) {
				int appid = Integer.parseInt(s);
				teamManageServiceImp.changeAppState(appid, 1);
			}
		}
		redirect(request);

		return mapping.findForward("ok");
	}

	public ActionForward refuse(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int appid = Integer.parseInt(request.getParameter("appid"));
		teamManageServiceImp.changeAppState(appid, -1);
		redirect(request);

		return mapping.findForward("ok");
	}

	/**
	 * 2016-03-26 批量拒绝
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward refsel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String[] idArray = request.getParameterValues("check[]");
		if (idArray != null) {
			for (String s : idArray) {
				int appid = Integer.parseInt(s);
				teamManageServiceImp.changeAppState(appid, -1);
			}
		}
		redirect(request);

		return mapping.findForward("ok");
	}

	public ActionForward del(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int appid = Integer.parseInt(request.getParameter("appid"));
		teamManageServiceImp.deleteTeamApplication(appid);
		redirect(request);

		return mapping.findForward("ok");
	}

	/**
	 * 2016-03-26 批量删除
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward delsel(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String[] idArray = request.getParameterValues("check[]");
		if (idArray != null) {
			for (String s : idArray) {
				int appid = Integer.parseInt(s);
				teamManageServiceImp.deleteTeamApplication(appid);
			}
		}
		redirect(request);

		return mapping.findForward("ok");
	}

	public ActionForward page(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		redirect(request);

		return mapping.findForward("ok");
	}

	/**
	 * 2016-03-26 完成操作以后保留原页数，比如删除第十页的数据后返回第10页
	 * 
	 * @param request
	 * @param year
	 */
	private void redirect(HttpServletRequest request) {

		String year = request.getParameter("year");
		if (year == null) {
			Object oyear = request.getSession().getAttribute("curYear");
			if (oyear == null)
				year = (new Date().getYear() + 1900) + "";
			else
				year = Integer.parseInt(oyear.toString()) + "";
		}
		// 获取当前页面
		String pageNum_ = request.getParameter("appPageNum");
		if (pageNum_ == null) {
			Object obj = request.getSession().getAttribute("appPageNum");
			if (obj == null)
				pageNum_ = "1";
			else {
				pageNum_ = obj.toString();
			}
		}
		int pageNum = Integer.parseInt(pageNum_);
		// 获取指定的报名信息
		TeamAdmin ta = (TeamAdmin) request.getSession().getAttribute(
				"teamadmin");
		int aid = 0;
		if (ta != null)
			aid = ta.getTeamArea().getAid();
		int pageSum = executeQueryImp.getTeamAppPageSum(aid,
				Parameters.APPPAGESIZE, year);
		if (pageNum > pageSum) {
			pageNum = pageSum > 0 ? pageSum : 1;// 最大只能显示最后一页
		}
		List<TeamApp> applist = executeQueryImp.getTeamApp(aid, pageNum,
				Parameters.APPPAGESIZE, year);
		request.getSession().setAttribute("application", applist);

		request.getSession().setAttribute("appPageNum", pageNum);
		request.getSession().setAttribute("pageSum", pageSum);
		request.getSession().setAttribute("curYear", Integer.parseInt(year));

		// //获取全部项目信息
		// List<TeamItems> itlist=executeQueryImp.getAllItems();
		// request.getSession().setAttribute("itlist", itlist);
	}
}