/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.TeamAdmin;
import com.robotcup.domain.TeamItems;
import com.robotcup.pojo.ItemInfo;
import com.robotcup.service.imp.ExecuteQueryImp;

/**
 * MyEclipse Struts Creation date: 05-06-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="method"
 */
@Controller
public class ReportAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Resource
	private ExecuteQueryImp executeQueryImp;

	public ExecuteQueryImp getExecuteQueryImp() {
		return executeQueryImp;
	}

	public void setExecuteQueryImp(ExecuteQueryImp executeQueryImp) {
		this.executeQueryImp = executeQueryImp;
	}

	public ActionForward item(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		TeamAdmin ta = (TeamAdmin) request.getSession().getAttribute(
				"teamadmin");
		String year = request.getParameter("year");
		if (year == null) {
			Object oyear = request.getSession().getAttribute("curYear");
			if (oyear == null)
				year = (new Date().getYear() + 1900) + "";
			else
				year = Integer.parseInt(oyear.toString()) + "";
		}
		List<TeamItems> items = executeQueryImp.getAllItems();
		int aid = ta.getTeamArea().getAid();
		List<ItemInfo> res = new ArrayList<ItemInfo>();
		for (int i = 0; i < items.size(); ++i) {
			ItemInfo ii = new ItemInfo();
			ii.setItname(items.get(i).getItname());
			ii.setStudents(executeQueryImp.getItemInfo("学生", ii.getItname(),
					aid, year));
			ii.setTeachers(executeQueryImp.getItemInfo("教师", ii.getItname(),
					aid, year));
			ii.setSum_s_t(ii.getStudents() + ii.getTeachers());
			ii.setVisible(items.get(i).getVisible());
			res.add(ii);
		}
		//20160521参赛人数
		int stuC=executeQueryImp.getDistinctStuCount(year);
		int teaC=executeQueryImp.getDistinctTeaCount(year);
		int schC=executeQueryImp.getDistinctSchCount(year);
		int teamC=executeQueryImp.getDistinctTeamCount(year);
		request.getSession().setAttribute("itemInfo", res);
		request.getSession().setAttribute("curYear", year);
		request.getSession().setAttribute("stuC", stuC);
		request.getSession().setAttribute("teaC", teaC);
		request.getSession().setAttribute("schC", schC);
		request.getSession().setAttribute("teamC", teamC);
		return mapping.findForward("showiteminfo");
	}
}