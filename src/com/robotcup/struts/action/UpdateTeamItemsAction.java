/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.ItemsType;
import com.robotcup.domain.TeamApplication;
import com.robotcup.domain.TeamItems;
import com.robotcup.domain.TeamUser;
import com.robotcup.service.imp.ExecuteQueryImp;
import com.robotcup.service.imp.TeamAdminServiceImp;
import com.robotcup.service.imp.TeamManageServiceImp;

/**
 * MyEclipse Struts Creation date: 04-12-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="method"
 */
@Controller
public class UpdateTeamItemsAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	@Resource
	private TeamManageServiceImp teamManageServiceImp;

	public TeamManageServiceImp getTeamManageServiceImp() {
		return teamManageServiceImp;
	}

	public void setTeamManageServiceImp(
			TeamManageServiceImp teamManageServiceImp) {
		this.teamManageServiceImp = teamManageServiceImp;
	}

	@Resource
	private ExecuteQueryImp executeQueryImp;

	public ExecuteQueryImp getExecuteQueryImp() {
		return executeQueryImp;
	}

	public void setExecuteQueryImp(ExecuteQueryImp executeQueryImp) {
		this.executeQueryImp = executeQueryImp;
	}

	@Resource
	private TeamAdminServiceImp teamAdminServiceImp;

	public TeamAdminServiceImp getTeamAdminServiceImp() {
		return teamAdminServiceImp;
	}

	public void setTeamAdminServiceImp(TeamAdminServiceImp teamAdminServiceImp) {
		this.teamAdminServiceImp = teamAdminServiceImp;
	}

	public ActionForward show(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		TeamUser user = (TeamUser) request.getSession()
				.getAttribute("teamuser");
		if (user == null) {
			return null;
		}
		int tid = user.getTid();
		String year = (new Date().getYear() + 1900) + "";
		List<TeamApplication> app = teamManageServiceImp.getItemsByTid(tid,
				year);
		List<ItemsType> type_ = teamManageServiceImp.getItemsType();
		List<ItemsType> type = new ArrayList<ItemsType>();
		for (ItemsType tt : type_) {
			int tyid = tt.getTyid();
			if (teamManageServiceImp.getItemsByTyid(tyid).size() == 0)
				continue;
			type.add(tt);
		}
		int defaultTyid = 1;
		if (type.size() > 0) {
			defaultTyid = type.get(0).getTyid();
		}
		List<TeamItems> items = teamManageServiceImp
				.getItemsByTyid(defaultTyid);// 默认显示第一组下的项目
		int memberCount = 0, teaCount = 0;
		String members = "", teachers = "";
		members = executeQueryImp.getTeamMemberByTname(user.getTname());
		teachers = executeQueryImp.getTeamTeacherByTname(user.getTname());
		String[] mems = members.split("、");
		String[] teas = teachers.split("、");
		memberCount = mems.length;// 队员人数
		teaCount = teas.length;
		if (members.trim().length() < 1)
			memberCount = 0;
		if (teachers.trim().length() < 1)
			teaCount = 0;
		if (teamAdminServiceImp.getEntrance()) {
			request.getSession().setAttribute("entrance", "1");
		} else {
			request.getSession().setAttribute("entrance", "0");
		}
		request.getSession().setAttribute("apps", app);
		request.getSession().setAttribute("types", type);
		request.getSession().setAttribute("items", items);
		request.getSession().setAttribute("teaCount", teaCount);
		request.getSession().setAttribute("stuCount", memberCount);

		return mapping.findForward("show");
	}
}