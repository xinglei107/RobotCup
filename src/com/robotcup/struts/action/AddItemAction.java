/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.TeamItems;
import com.robotcup.service.imp.ExecuteQueryImp;
import com.robotcup.service.imp.TeamAdminServiceImp;
import com.robotcup.struts.form.TeamItemsForm;

/**
 * MyEclipse Struts Creation date: 05-01-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/teamItems" name="teamItemsForm" scope="request"
 *                validate="true"
 */
@Controller
public class AddItemAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	@Resource
	private TeamAdminServiceImp teamAdminServiceImp;

	public TeamAdminServiceImp getTeamAdminServiceImp() {
		return teamAdminServiceImp;
	}

	public void setTeamAdminServiceImp(TeamAdminServiceImp teamAdminServiceImp) {
		this.teamAdminServiceImp = teamAdminServiceImp;
	}

	@Resource
	private ExecuteQueryImp executeQueryImp;

	public ExecuteQueryImp getExecuteQueryImp() {
		return executeQueryImp;
	}

	public void setExecuteQueryImp(ExecuteQueryImp executeQueryImp) {
		this.executeQueryImp = executeQueryImp;
	}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		TeamItemsForm teamItemsForm = (TeamItemsForm) form;// TODO
															// Auto-generated
															// method stub
		if (!teamAdminServiceImp.isItemRepeat(teamItemsForm.getItname())) {
			TeamItems teamItem = new TeamItems();
			teamItem.setItname(teamItemsForm.getItname());
			teamItem.setItremark(teamItemsForm.getItremark());
			teamItem.setItlimit(teamItemsForm.getItlimit());
			teamItem.setIttealim(teamItemsForm.getIttealim());
			teamItem.setItteacap(teamItemsForm.getItteacap());
			teamItem.setItemsType(teamAdminServiceImp
					.getItemsTypeByTyid(teamItemsForm.getTyid()));
			teamItem.setVisible(1);
			teamItem.setItorder(1);
			teamAdminServiceImp.addItem(teamItem);
			request.setAttribute("addres", 1);// 添加成功
		} else
			request.setAttribute("addres", 0);// 有重名
		List<TeamItems> ilist = executeQueryImp.getAllItems();
		request.getSession().setAttribute("ilist", ilist);
		request.getSession().setAttribute("iform", teamItemsForm);// 保留页面上已经输入的内容
		return mapping.findForward("ok");
	}
}