/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.robotcup.struts.action;

import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.springframework.stereotype.Controller;

import com.robotcup.domain.ItemsType;
import com.robotcup.domain.TeamAdmin;
import com.robotcup.domain.TeamArea;
import com.robotcup.domain.TeamItems;
import com.robotcup.domain.TeamUnversity;
import com.robotcup.service.imp.ExecuteQueryImp;
import com.robotcup.service.imp.TeamAdminServiceImp;
import com.robotcup.util.MyTools;

/**
 * MyEclipse Struts Creation date: 05-01-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action parameter="method"
 */
@Controller
public class ManageComAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */

	@Resource
	private ExecuteQueryImp executeQueryImp;

	public ExecuteQueryImp getExecuteQueryImp() {
		return executeQueryImp;
	}

	public void setExecuteQueryImp(ExecuteQueryImp executeQueryImp) {
		this.executeQueryImp = executeQueryImp;
	}

	@Resource
	private TeamAdminServiceImp teamAdminServiceImp;

	public TeamAdminServiceImp getTeamAdminServiceImp() {
		return teamAdminServiceImp;
	}

	public void setTeamAdminServiceImp(TeamAdminServiceImp teamAdminServiceImp) {
		this.teamAdminServiceImp = teamAdminServiceImp;
	}

	public ActionForward area(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		List<TeamArea> alist = executeQueryImp.getArea();
		request.getSession().setAttribute("alist", alist);
		return mapping.findForward("area");
	}

	public ActionForward delarea(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int aid = Integer.parseInt(request.getParameter("aid"));
		TeamArea ta = teamAdminServiceImp.getTeamAreaByAid(aid);
		teamAdminServiceImp.delAreaByAid(ta);
		// 删除后返回
		List<TeamArea> alist = executeQueryImp.getArea();
		request.getSession().setAttribute("alist", alist);
		return mapping.findForward("area");
	}

	public ActionForward sch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		List<TeamUnversity> slist = executeQueryImp.getUniversity();
		request.getSession().setAttribute("slist", slist);
		return mapping.findForward("school");
	}

	public ActionForward delsch(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int sid = Integer.parseInt(request.getParameter("sid"));
		TeamUnversity tu = executeQueryImp.getUniversityBySid(sid);
		teamAdminServiceImp.delObject(tu);

		List<TeamUnversity> slist = executeQueryImp.getUniversity();
		request.getSession().setAttribute("slist", slist);
		return mapping.findForward("school");
	}

	public ActionForward type(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub

		List<ItemsType> tlist = executeQueryImp.getAllItemsType();
		request.getSession().setAttribute("tlist", tlist);
		return mapping.findForward("type");
	}

	public ActionForward deltype(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int tyid = Integer.parseInt(request.getParameter("tyid"));
		ItemsType it = teamAdminServiceImp.getItemsTypeByTyid(tyid);
		teamAdminServiceImp.delTypeByTyid(it);

		List<ItemsType> tlist = executeQueryImp.getAllItemsType();
		request.getSession().setAttribute("tlist", tlist);
		return mapping.findForward("type");
	}

	public ActionForward item(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		// 获取项目分类
		List<ItemsType> tlist = executeQueryImp.getAllItemsType();
		request.getSession().setAttribute("tlist", tlist);

		List<TeamItems> ilist = executeQueryImp.getAllItems();
		request.getSession().setAttribute("ilist", ilist);
		return mapping.findForward("item");
	}

	public ActionForward delitem(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int itid = Integer.parseInt(request.getParameter("itid"));
		TeamItems ti = teamAdminServiceImp.getTeamItemByItid(itid);
		teamAdminServiceImp.delObject(ti);

		List<TeamItems> ilist = executeQueryImp.getAllItems();
		request.getSession().setAttribute("ilist", ilist);
		return mapping.findForward("item");
	}

	public ActionForward adm(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		List<TeamAdmin> adlist = teamAdminServiceImp.getTeamAdmin();
		request.getSession().setAttribute("adlist", adlist);
		return mapping.findForward("admin");
	}

	public ActionForward deladm(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int adid = Integer.parseInt(request.getParameter("adid"));
		TeamAdmin ta = teamAdminServiceImp.getTeamAdminByAdid(adid);
		teamAdminServiceImp.delAdminByAdid(ta);

		List<TeamAdmin> adlist = teamAdminServiceImp.getTeamAdmin();
		request.getSession().setAttribute("adlist", adlist);
		return mapping.findForward("admin");
	}

	/**
	 * 
	 * @Description clitem
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @author xinglei 2015-09-22增加，关闭项目
	 */
	public ActionForward clvis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int itid = Integer.parseInt(request.getParameter("itid"));
		teamAdminServiceImp.setItemVisibleByItid(itid, 0);

		List<TeamItems> ilist = executeQueryImp.getAllItems();
		request.getSession().setAttribute("ilist", ilist);
		return mapping.findForward("item");
	}

	/**
	 * 
	 * @Description opitem
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @author xinglei 2015-09-22增加，打开项目
	 */
	public ActionForward opvis(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int itid = Integer.parseInt(request.getParameter("itid"));
		teamAdminServiceImp.setItemVisibleByItid(itid, 1);

		List<TeamItems> ilist = executeQueryImp.getAllItems();
		request.getSession().setAttribute("ilist", ilist);
		return mapping.findForward("item");
	}

	/**
	 * 
	 * @Description resetAdPwd
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @author xinglei 2015-10-19 增加，重置管理员密码
	 */
	public ActionForward resetAdPwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int adid = Integer.parseInt(request.getParameter("adid"));

		teamAdminServiceImp.changeAdminPassword(adid, MyTools.MD5("123456"));
		request.setAttribute("resetPwd", "123456");
		return mapping.findForward("admin");
	}

	/**
	 * 
	 * @Description clearAdPwd
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @author xinglei 2015-10-19 增加，清零管理员密码
	 */
	public ActionForward clearAdPwd(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		int adid = Integer.parseInt(request.getParameter("adid"));

		teamAdminServiceImp.changeAdminPassword(adid, MyTools.MD5("000000"));
		request.setAttribute("resetPwd", "000000");
		return mapping.findForward("admin");
	}

}